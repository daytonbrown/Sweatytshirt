@model List<Sweaty_T_Shirt.Models.UserProfile>
@{
    ViewBag.Title = "Manage Users";
}
@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        $(document).ready(function () {
            //this re-wires the "Delete User" link to do a colorbox warning.
            //note that the href generated by the action link is not actually used, instead the form posts back.
            $('a.delete-user-warning').on('click', function () {
                $('#deleteUserFullName').text($(this).attr('fullName'));
                $('#UserId').val($(this).attr('userID'));
                $.colorbox({ inline: true, href: '#deleteUserAlert', open: true, width: '350px', height: "350px" });
                return false;
            });

            /*this re-wires the "Edit User" link to do a colorbox popup to hold the edit user page.*/
            $('a.edit-user-popup').on('click', function () {
                $.colorbox({ href: $(this).attr('href'), open: true, iframe: true, scrolling: true, width: '700px', height: "700px" });
                return false;
            });

        });
    </script>
}

<div style="display:none">
    <div id="deleteUserAlert">
        @using (Html.BeginForm("DeleteUser", "Account", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            <input type="hidden" name="UserId" id="UserId" />    
            <p>
                Delete user <span id="deleteUserFullName"></span>?  This will also delete all sweaty-t-shirts associated
                with the user and remove the user from all competitions.  Any competitions created by this user will
                remain with your user id as the creator.
            </p>
            <p>Click "Yes" to proceed with the delete, otherwise click "Cancel"</p>
            <input type="submit" value="Yes" />
            <input type="button" onclick="$.colorbox.close();" value="Cancel" />
        }
    </div>
</div>

<h2>Manage Users</h2>

@if (Model.Count > 0)
{
    var grid = new WebGrid(Model, canPage: false, canSort: false);
    @grid.GetHtml(tableStyle: "webgrid",
        rowStyle: "webgrid-row",
        alternatingRowStyle: "webgrid-alternating-row",
        columns: grid.Columns(
        grid.Column(header: "Full Name", format: item => item.FullName),
            grid.Column(header: "User Name", format: item => item.UserName),
            grid.Column(header: string.Empty, format: item => Html.ActionLink("Edit User", "EditUser", "Account",
                new { userID = item.UserId },
                new { @class = "edit-user-popup" })),
            grid.Column(header: string.Empty, format: item => Html.ActionLink("Delete User", "DeleteUser", "Account",
                    new { userID = item.UserId },
                    new { @class = "delete-user-warning", @userID = item.UserID, @fullName = item.FullName }))
    ))
}
